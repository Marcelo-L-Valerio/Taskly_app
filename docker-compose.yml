version: "3.9"

services:
  app:
    build:
      context: .
      args:
        - DEV=true
    ports:
      - "8000:8000"
    volumes:
      - ./src:/src
    command: >
      sh -c "python manage.py wait_for_db &&
              python manage.py migrate &&
              python manage.py runserver 0.0.0.0:8000"
    environment:
      - DJANGO_DB=${DJANGO_DB}
      - DB_HOST=db
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DEBUG=1
    depends_on:
      - db
      - redis

  db:
    image: postgres:13-alpine
    volumes:
      - dev-db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}

  redis:
    image: redis:alpine

  celery:
    restart: always
    build:
      context: .
    command: celery -A taskful_api worker -l info
    volumes:
      - ./src:/src
    environment:
      - DJANGO_DB=${DJANGO_DB}
      - DB_HOST=db
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
    depends_on:
      - redis
      - app
      - db

  celery-beat:
    build:
      context: .
    command: celery -A taskful_api beat -l fatal
    volumes:
      - ./src:/src
    depends_on:
      - redis
      - app
      - db
      - celery


volumes:
  dev-db-data:
